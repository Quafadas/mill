package build
import mill._, scalalib._, scalajslib._
import mill.scalajslib.api._


object wasm extends ScalaJSModule {
  override def scalaVersion = "3.3.4"

  override def scalaJSVersion = "1.17.0"

  override def moduleKind = ModuleKind.ESModule

  override def moduleSplitStyle = ModuleSplitStyle.FewestModules

  override def scalaJSEmitWasm = true
}

// This build defines a single `ScalaJSModule` that uses the `WASM` backend of the scala JS linker.
// The release notes that introduced scalaJS wasm are here;
// https://www.scala-js.org/news/2024/09/28/announcing-scalajs-1.17.0/
// and are worth reading. They include information such as the scala JS requirements to successfully emit wasm,
// the flags needed to run in browser and the minimum node version (22) required to actually run the wasm output.

/** Usage

> mill show wasm.fastLinkJS
[1/1] show
{
  ...
  "dest": "... out/wasm/fastLinkJS.dest"
}

> ls out/wasm/fastLinkJS.dest
__loader.js     main.js         main.wasm       main.wasm.map

> node out/foo/fullLinkJS.dest/main.js
Debugger listening on ws://127.0.0.1:57753/d17db228-5159-4e60-be1f-4cc47a396ddf
For help, see: https://nodejs.org/en/docs/inspector
Debugger attached.
hello  wasm!

*/

// Here we see that scala JS emits a single WASM module, as well as a loader and main.js file.
// `main.js` is the entry point of the program, and calls into the wasm module.


